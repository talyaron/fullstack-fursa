import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
//import { RootState, AppThunk } from '../store';
//import {getJoke} from './textApi';

export interface TextProps {
  text: string;
  img: string;
 // status: 'idle' | 'loading' | 'failed';
  //products:Array<any>;
}

const initialState: TextProps = {
  text: 'initial state',
  img: '',
  //products:[],
  //status: 'idle',
};



export const textReducer = createSlice({
  name: 'text2',
  initialState,
  reducers: {
    update: (state, action) => {
      state.text = action.payload[0];
      state.img = action.payload [1];

    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.

});

export const { update  } = textReducer.actions;
export const selectText = (state: RootState) => state.text2.text;
//export const selectTextStauts = (state:RootState) => state.text.status;
export const selectImg = (state: RootState) => state.text2.img;


export default textReducer.reducer;
